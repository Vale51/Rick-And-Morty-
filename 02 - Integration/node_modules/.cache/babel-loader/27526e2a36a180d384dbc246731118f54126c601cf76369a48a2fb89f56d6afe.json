{"ast":null,"code":"const initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_FAV\":\n      const copyCharacters = [...state.allCharacters, action.payload];\n      return {\n        ...state,\n        myFavorites: copyCharacters\n      };\n    case \"FILTER\":\n      const filteredChars = state.allCharacters.filter(character => {\n        return character.gender === action.payload;\n      });\n      return {\n        ...state,\n        myFavorites: filteredChars\n      };\n    case \"ORDER\":\n      const orderChars = state.allCharacters.sort((a, b) => {\n        if (action.payload === \"Ascendente\") {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        } else {\n          if (a.id < b.id) return 1;\n          if (a.id > b.id) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        myFavorites: [...orderChars]\n      };\n    case \"REMOVE_FAV\":\n      const updatedList = state.myFavorites.filter(favorite => favorite.id !== parseInt(action.payload));\n      console.log(\"Nuevo estado de myFavorites (después de eliminar):\", updatedList);\n      return {\n        ...state,\n        myFavorites: updatedList\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","action","type","copyCharacters","payload","filteredChars","filter","character","gender","orderChars","sort","a","b","id","updatedList","favorite","parseInt","console","log"],"sources":["C:/Users/risat/OneDrive/Escritorio/SoyHenry-cosas/Modulo-2/FT-M2/06-React-Intro/homework/02 - Integration/src/redux/reducer.js"],"sourcesContent":["\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: []\r\n}\r\n\r\nconst rootReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case \"ADD_FAV\":\r\n            const copyCharacters = [...state.allCharacters, action.payload];\r\n            \r\n            \r\n            return {\r\n                ...state,\r\n                myFavorites: copyCharacters,\r\n                \r\n            }\r\n\r\n        case \"FILTER\":\r\n            const filteredChars = state.allCharacters.filter((character)=>{\r\n                return character.gender === action.payload\r\n            })\r\n            return{\r\n                ...state,\r\n                myFavorites: filteredChars\r\n            }\r\n\r\n        case \"ORDER\":\r\n            const orderChars = state.allCharacters.sort((a,b)=>{\r\n                if (action.payload === \"Ascendente\") {\r\n                    if (a.id < b.id) return -1\r\n                    if (a.id > b.id) return 1\r\n                    return 0\r\n                }\r\n                else{\r\n                    if (a.id < b.id) return 1\r\n                    if (a.id > b.id) return -1\r\n                    return 0\r\n                }\r\n            })\r\n            return{\r\n                ...state,\r\n                myFavorites: [...orderChars]\r\n            }    \r\n        \r\n        case \"REMOVE_FAV\":\r\n            const updatedList = state.myFavorites.filter((favorite) =>  favorite.id !== parseInt(action.payload));\r\n            console.log(\"Nuevo estado de myFavorites (después de eliminar):\", updatedList)\r\n            return {\r\n                ...state,\r\n                myFavorites: updatedList\r\n            }    \r\n    \r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n"],"mappings":"AAEA,MAAMA,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV,MAAMC,cAAc,GAAG,CAAC,GAAGN,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACG,OAAO,CAAC;MAG/D,OAAO;QACH,GAAGP,KAAK;QACRH,WAAW,EAAES;MAEjB,CAAC;IAEL,KAAK,QAAQ;MACT,MAAME,aAAa,GAAGR,KAAK,CAACF,aAAa,CAACW,MAAM,CAAEC,SAAS,IAAG;QAC1D,OAAOA,SAAS,CAACC,MAAM,KAAKP,MAAM,CAACG,OAAO;MAC9C,CAAC,CAAC;MACF,OAAM;QACF,GAAGP,KAAK;QACRH,WAAW,EAAEW;MACjB,CAAC;IAEL,KAAK,OAAO;MACR,MAAMI,UAAU,GAAGZ,KAAK,CAACF,aAAa,CAACe,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAG;QAC/C,IAAIX,MAAM,CAACG,OAAO,KAAK,YAAY,EAAE;UACjC,IAAIO,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;UACzB,OAAO,CAAC;QACZ,CAAC,MACG;UACA,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;UACzB,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC;MACF,OAAM;QACF,GAAGhB,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGe,UAAU;MAC/B,CAAC;IAEL,KAAK,YAAY;MACb,MAAMK,WAAW,GAAGjB,KAAK,CAACH,WAAW,CAACY,MAAM,CAAES,QAAQ,IAAMA,QAAQ,CAACF,EAAE,KAAKG,QAAQ,CAACf,MAAM,CAACG,OAAO,CAAC,CAAC;MACrGa,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEJ,WAAW,CAAC;MAC9E,OAAO;QACH,GAAGjB,KAAK;QACRH,WAAW,EAAEoB;MACjB,CAAC;IAEL;MACI,OAAOjB,KAAK;EAEpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}