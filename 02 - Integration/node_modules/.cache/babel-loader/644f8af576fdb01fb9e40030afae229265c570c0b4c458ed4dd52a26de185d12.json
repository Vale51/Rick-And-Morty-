{"ast":null,"code":"// validation.js\n\nexport const validateForm = userData => {\n  let errors = {};\n\n  // Validación del email\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!userData.email) {\n    errors.email = 'El email no puede estar vacío.';\n  } else if (!emailRegex.test(userData.email)) {\n    errors.email = 'El email debe ser válido.';\n  } else if (userData.email.length > 35) {\n    errors.email = 'El email no puede tener más de 35 caracteres.';\n  }\n\n  // Validación de la contraseña\n  const passwordRegex = /^(?=.*\\d).{6,10}$/;\n  if (!userData.password) {\n    errors.password = 'La contraseña no puede estar vacía.';\n  } else if (!passwordRegex.test(userData.password)) {\n    errors.password = 'La contraseña debe tener al menos un número y una longitud entre 6 y 10 caracteres.';\n  }\n  return errors;\n};","map":{"version":3,"names":["validateForm","userData","errors","emailRegex","email","test","length","passwordRegex","password"],"sources":["C:/Users/risat/OneDrive/Escritorio/SoyHenry-cosas/Modulo-2/FT-M2/06-React-Intro/homework/02 - Integration/src/components/Validation/validation.js"],"sourcesContent":["// validation.js\r\n\r\nexport const validateForm = (userData) => {\r\n    let errors = {};\r\n  \r\n    // Validación del email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!userData.email) {\r\n      errors.email = 'El email no puede estar vacío.';\r\n    } else if (!emailRegex.test(userData.email)) {\r\n      errors.email = 'El email debe ser válido.';\r\n    } else if (userData.email.length > 35) {\r\n      errors.email = 'El email no puede tener más de 35 caracteres.';\r\n    }\r\n  \r\n    // Validación de la contraseña\r\n    const passwordRegex = /^(?=.*\\d).{6,10}$/;\r\n    if (!userData.password) {\r\n      errors.password = 'La contraseña no puede estar vacía.';\r\n    } else if (!passwordRegex.test(userData.password)) {\r\n      errors.password = 'La contraseña debe tener al menos un número y una longitud entre 6 y 10 caracteres.';\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  "],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,GAAIC,QAAQ,IAAK;EACtC,IAAIC,MAAM,GAAG,CAAC,CAAC;;EAEf;EACA,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE;IACnBF,MAAM,CAACE,KAAK,GAAG,gCAAgC;EACjD,CAAC,MAAM,IAAI,CAACD,UAAU,CAACE,IAAI,CAACJ,QAAQ,CAACG,KAAK,CAAC,EAAE;IAC3CF,MAAM,CAACE,KAAK,GAAG,2BAA2B;EAC5C,CAAC,MAAM,IAAIH,QAAQ,CAACG,KAAK,CAACE,MAAM,GAAG,EAAE,EAAE;IACrCJ,MAAM,CAACE,KAAK,GAAG,+CAA+C;EAChE;;EAEA;EACA,MAAMG,aAAa,GAAG,mBAAmB;EACzC,IAAI,CAACN,QAAQ,CAACO,QAAQ,EAAE;IACtBN,MAAM,CAACM,QAAQ,GAAG,qCAAqC;EACzD,CAAC,MAAM,IAAI,CAACD,aAAa,CAACF,IAAI,CAACJ,QAAQ,CAACO,QAAQ,CAAC,EAAE;IACjDN,MAAM,CAACM,QAAQ,GAAG,qFAAqF;EACzG;EAEA,OAAON,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}